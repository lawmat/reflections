What happens when you initialize a repository? Why do you need to do it?
A new hidden directory is created to store all the version history for the directory you are tracking. You'll need to do this in order to start using git to track version history.

How is the staging area different from the working directory and the repository? What value do you think it offers?
Th working directory is the current viewable files in the local directory. The staging area is where modified files from the working directory can be added in preparation to be commited to the repository. The repository contains a history of all file versions including the latest file version in use. The staging area is useful because it allows developers to add files to be commited without commiting the changes immediately.

How can you use the staging area to make sure you have one commit per logical change?
By only adding changes to files that are related to one another.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When you want to experiment with new functionality or alternative configuration but keep your stable (master) branch active.

How do the diagrams help you visualize the branch structure?
By seeing when branches split off from the master and what chronological order the branch changes occured.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
A branch which includes the combined changes from both branches. The diagram shows where the branches diverged from one another and how they are merged together. This is important because we need to understand how the branches fit together.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Pros are that merging automatically saves time and makes it easier to merge branches. The cons are that some of the merges might not make sense and that without human intervention, the program might not do what is intended.